<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\formatage_models\FormatageModelsThemes;

/**
 *
 * @file
 * Primary module hooks for formatage models module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */
function addTextareaTreeMultipleMoreAjax(&$form, FormStateInterface $form_state) {
  $parents = $form_state->getTriggeringElement()['#parents'];
  $nbre = count($parents);
  $field = $form;
  for ($i = 0; $i < ($nbre - 2); $i++) {
    if (!empty($parents[$i]) && !empty($field[$parents[$i]]))
      $field = $field[$parents[$i]];
  }
  $form_state->get('nombre_field');
  return $field;
}

/**
 * Implements hook_preprocess_HOOK() for paragraph.html.twig.
 *
 * @see contextual_preprocess()
 * @see template_preprocess_paragraph()
 */
function formatage_models_preprocess_paragraph(&$variables) {
  // Paragraph templates don't normally print the title_suffix, so add the
  // contextual links to the content render array.
  if (isset($variables['title_suffix']['contextual_links'])) {
    $variables['content']['contextual_links'] = $variables['title_suffix']['contextual_links'];
    $variables['content']['contextual_links']['#weight'] = -100;
    // add special place to edit
    $routes = [
      'vuejs_entity.model_choisie_form',
      'buildercv.build_cv'
    ];
    $route_name = \Drupal::routeMatch()->getRouteName();
    if (!in_array($route_name, $routes) && !\Drupal::service('router.admin_context')->isAdminRoute()) {
      $variables['content']['formatage_models_quickly_edit'] = [
        '#theme' => 'formatage_models_quickly_edit',
        '#contextual_links' => $variables['content']['contextual_links']
      ];
    }
  }
}

/**
 * Implement hook_preprocess_page
 */
function formatage_models_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === 'layout_builder.overrides.node.view' || str_contains($route_name, 'layout_builder.')) {
    $variables['page']['content']['#attached']['library'][] = 'formatage_models/formatage-models-admin';
  }
  elseif ($route_name == 'entity.paragraphs_type.collection') {
    $variables['page']['content']['#attached']['library'][] = 'formatage_models/formatage-models-admin-paragraph';
  }
  // Il faudra que ces liens soient configurable (settings.form).
  $routes = [
    'vuejs_entity.model_choisie_form',
    'buildercv.build_cv'
  ];
  if (!empty($variables['logged_in']) && !in_array($route_name, $routes) && !\Drupal::service('router.admin_context')->isAdminRoute()) {
    $variables['page']['content']['entity_edit_vuejs'] = [
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#attributes' => [
        'id' => 'entity_edit_by_vuejs'
      ],
      '#attached' => [
        'library' => [
          'formatage_models/edit_entity'
        ]
      ]
    ];
  }
}

/**
 * Permet de supprimer les blocs qui ne sont pas generelement utilisÃ©.
 *
 * @param array $definitions
 * @param array $extra
 */
function formatage_models_plugin_filter_layout__layout_builder_alter(array &$definitions, array $extra) {
  foreach ($definitions as $layout_id => $layout) {
    $module = $layout->getProvider();
    if (!$module) {
      unset($definitions[$layout_id]);
    }
    elseif ($module == 'layout_builder' || $module == 'layout_discovery' || $module == 'bootstrap_barrio') {
      unset($definitions[$layout_id]);
    }
  }
}

/**
 * Implement hook__layouts
 */
function formatage_models_preprocess_layout(&$vars) {
  if (!empty($vars['region_attributes'])) {
    foreach ($vars['region_attributes'] as $key => $region_attribute) {
      $vars['region_attributes'][$key]->addClass('layout-region');
    }
  }
}

function formatage_models_preprocess_formatage_models_menu01(&$vars) {
  FormatageModelsThemes::formatage_models_menu01($vars);
  FormatageModelsThemes::mergeContentAttributes($vars);
}

function formatage_models_preprocess_formatage_models_contact_page(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

function formatage_models_preprocess_formatage_models_contact(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_blog_call_toaction(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_description(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_empty_results(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_page_bigbackground(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 * Implement hook__layouts
 */
function formatage_models_preprocess_blb_section(&$vars) {
  if (!empty($vars['region_attributes'])) {
    foreach ($vars['region_attributes'] as $key => $region_attribute) {
      $vars['region_attributes'][$key]->addClass('layout-region');
    }
  }
  // if ($vars['theme_hook_original'] == 'blb_section')
}

/**
 * Implements hook_theme().
 */
function formatage_models_theme() {
  $hooks = FormatageModelsThemes::getThemeHooks();
  // template to edit quickly paragraphe.
  $hooks['formatage_models_quickly_edit'] = [
    'preprocess functions' => [
      'template_preprocess_formatage_models_quickly_edit'
    ],
    'render element' => 'element',
    'file' => 'themes/formatage_models.theme.inc'
  ];
  return $hooks;
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_footer1(&$vars) {
  // FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_comments(&$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_titre_description(array &$variables) {
  
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::mergeContentAttributes($variables);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_formatage_models_hero_thegem_18(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

function formatage_models_preprocess_formatage_models_images_bg(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  // FormatageModelsThemes::ApplyAttributes($variables);
  FormatageModelsThemes::mergeContentAttributes($variables);
}

function formatage_models_preprocess_formatage_models_services_sliders(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

function formatage_models_preprocess_formatage_models_titre(array &$vars) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  // FormatageModelsThemes::ApplyAttributes($variables);
  // FormatageModelsThemes::mergeContentAttributes($variables);
  FormatageModelsThemes::mergeContentAttributes($vars);
}

function formatage_models_preprocess_formatage_models_lmsg_call_toaction(array &$vars) {
  FormatageModelsThemes::mergeContentAttributes($vars);
}

function formatage_models_preprocess_formatage_models_service_icone(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
  FormatageModelsThemes::mergeContentAttributes($variables);
}

function formatage_models_preprocess_formatage_models_expert_solution(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

function formatage_models_preprocess_formatage_models_image_after_before(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

function formatage_models_preprocess_formatage_models_hero_slider_popup(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

function formatage_models_preprocess_formatage_models_simple_block(array &$variables) {
  // FormatageModelsThemes::ApplyAttributes($variables);
  // FormatageModelsThemes::addLayoutEditBlock($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_galery_title(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_blog_list(array &$variables) {
  FormatageModelsThemes::ApplyAttributes($variables);
  // FormatageModelsThemes::addLayoutEditBlock($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_teaser(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  // FormatageModelsThemes::ApplyAttributes($variables);
  FormatageModelsThemes::mergeContentAttributes($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_teaser_a_la_une(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_realisation_big(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_realisation_small(array &$variables) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  FormatageModelsThemes::ApplyAttributes($variables);
}

/**
 *
 * @param array $variables
 */
function formatage_models_preprocess_formatage_models_bg_header(array &$vars) {
  // FormatageModelsThemes::addLayoutEditBlock($variables);
  // FormatageModelsThemes::ApplyAttributes($variables);
  FormatageModelsThemes::mergeContentAttributes($vars);
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_views_view_render_page(&$vars) {
  module_load_include('inc', 'views', 'views.theme');
  template_preprocess_views_view($vars);
  /**
   *
   * @var \Drupal\views\ViewExecutable $view
   */
  $view = $vars['view'];
  //
  $css = $view->display_handler->getOption('view_row_css');
  
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['rows']['attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_header_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['header']['#attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_form_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode("", $css);
    $Attribute->addClass($css);
    if (!empty($vars['exposed']['#attributes']))
      $vars['exposed']['#attributes']->addClass($css);
    else
      $vars['exposed']['#attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_footer_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['footer']['#attributes'] = $Attribute;
  }
}

/**
 *
 * @param array $vars
 */
function formatage_models_preprocess_views_view_render(&$vars) {
  
  /**
   *
   * @var \Drupal\views\ViewExecutable $view
   */
  $view = $vars['view'];
  //
  $css = $view->display_handler->getOption('view_row_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['rows']['attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_header_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['header']['#attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_form_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode("", $css);
    $Attribute->addClass($css);
    if (!empty($vars['exposed']['#attributes']))
      $vars['exposed']['#attributes']->addClass($css);
    else
      $vars['exposed']['#attributes'] = $Attribute;
  }
  //
  $css = $view->display_handler->getOption('view_footer_css');
  if ($css) {
    $Attribute = new Attribute();
    $css = explode(" ", $css);
    $Attribute->addClass($css);
    $vars['footer']['#attributes'] = $Attribute;
  }
}



