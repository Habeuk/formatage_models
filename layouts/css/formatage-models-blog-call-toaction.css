/**
 * color de base
 */
/**/
/**/
/**
 * Typography
 */
/**
 * typography
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**/
/* space */
/* color */
/* typography */
body,
html {
  font-size: 1.4rem;
  letter-spacing: normal;
  line-height: 1.3;
  color: #4c4c4c;
  margin: 0;
}

html {
  font-size: 62.5%;
  line-height: 1.5;
}

.paragraphList {
  margin-bottom: 4rem;
  text-align: center;
}
.paragraphList ul {
  list-style: none;
  padding: 0;
}
.paragraphList ul li {
  margin-top: 5px;
  display: flex;
  justify-content: start;
  align-items: center;
}
.paragraphList ul li .list_icon {
  width: 25px;
  height: 25px;
  display: flex;
  justify-content: center;
  background-color: ghostwhite;
  align-items: center;
  border-radius: 20px;
  padding: 5px;
  color: teal;
  margin-right: 15px;
}
@media only screen and (max-width: 440px) {
  .paragraphList ul li .list_icon {
    width: 18px;
    height: 18px;
    font-size: 11px;
  }
}
.paragraphList ul li p {
  text-align: left;
  font-weight: 700;
  font-size: 1.54rem;
  line-height: 18px;
  color: #1b1918;
}
.paragraphList ul li p span {
  color: #49a0a2;
}

.serviceBlock-module {
  flex-basis: calc(50% - 15px);
  margin: 0 auto 5rem;
  width: 100%;
}
.serviceBlock-module__container {
  background: linear-gradient(36.64deg, #007891 14.08%, #49a0a2);
  display: flex;
  justify-content: center;
  align-items: center;
}
.serviceBlock-module__serviceMessage {
  background-color: #fff;
  margin: 4rem 5rem 6rem;
  padding: 2rem 2rem 6rem;
  position: relative;
  text-align: center;
  color: #1b1918;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module__serviceMessage {
    margin: 4rem 3rem 6rem;
  }
}
.serviceBlock-module__serviceTitle {
  line-height: 1.105;
  margin-bottom: 4rem;
}
.serviceBlock-module__serviceDescription {
  font-weight: 400;
}
.serviceBlock-module__button {
  text-decoration: none;
  color: #fff;
  background: #1b1918;
  border-radius: 2px;
  font-style: normal;
  font-weight: 700;
  font-size: 1.54rem;
  line-height: 24px;
  padding: 10px 20px;
  bottom: 0;
  transform: translateY(18%);
  display: inline-block;
}
.serviceBlock-module__button a {
  color: #FFF;
}
.serviceBlock-module__button i {
  font-size: 1.4rem;
  font-weight: 200;
  margin-left: 10px;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module__button {
    margin-top: 10px;
    position: relative;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/