/**
 * color de base
 */
/**/
/**/
/**
 * Typography
 */
/**
 * typography
 */
/* */
/*permet de surcharger les variables bootstrap */
/**/
/* space */
/* color */
/* typography */
.reinsuranceBlock {
  max-width: 970px;
  width: 100%;
  margin: auto;
  margin-bottom: 70px;
}
.reinsuranceBlock__hr {
  height: 1px;
  padding: 0;
  color: #cbcbcb;
  background-color: #cbcbcb;
  margin-top: 40px;
  margin-bottom: 30px;
  border: none;
}
.reinsuranceBlock__h3 {
  text-align: center;
  margin-top: 55px;
  margin-bottom: 53px;
  font-style: normal;
  font-weight: 700;
  font-size: 25px;
  line-height: 29px;
}
.reinsuranceBlock__container {
  width: calc(100% + 16px);
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
}
.reinsuranceBlock button {
  background: #49a0a2;
  color: #fff;
  border-radius: 0;
  padding: 20px 65px;
  font-size: 1.4rem;
}
@media only screen and (max-width: 440px) {
  .reinsuranceBlock button {
    padding: 16px 20px;
    font-size: 1rem;
    display: flex;
    line-height: 1;
    align-items: center;
  }
}
.reinsuranceBlock button i {
  padding-right: 5px;
}
.reinsuranceBlock button:hover {
  color: #fff;
}
.reinsuranceBlock__bouton {
  margin: 30px 0;
  display: flex;
  justify-content: center;
  cursor: pointer;
}

.serviceBlock-module {
  flex-basis: calc(50% - 15px);
  margin-top: 50px;
  margin-bottom: 20px;
}
.serviceBlock-module__container {
  background: linear-gradient(36.64deg, #007891 14.08%, #49a0a2);
  display: flex;
  justify-content: center;
  align-items: center;
}
.serviceBlock-module__serviceMessage {
  background-color: #fff;
  margin: 40px 50px 60px;
  padding: 20px 20px 60px;
  position: relative;
  text-align: center;
  color: #1b1918;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module__serviceMessage {
    margin: 40px 30px 60px;
  }
}
.serviceBlock-module__serviceTitle {
  font-weight: 700;
  font-size: 24px;
  line-height: 28px;
}
.serviceBlock-module__serviceDescription {
  font-weight: 400;
  font-size: 16px;
  line-height: 18px;
  margin-top: 22px;
}
.serviceBlock-module a {
  display: flex;
  text-decoration: none;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: #fff;
  background: #1b1918;
  border-radius: 2px;
  font-style: normal;
  font-weight: 700;
  font-size: 12px;
  line-height: 24px;
  padding: 10px 20px;
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translate(-50%, 35%);
}
.serviceBlock-module a i {
  font-size: 0.8rem;
  font-weight: 200;
  margin-left: 10px;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module a {
    margin-top: 10px;
    position: relative;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/