@charset "UTF-8";
/*------------------------------------
  Wbu-Atomique variables
------------------------------------*/
/**/
/**/
/**
 * Typography.
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**
 * Chargement progressif
 */
/**
 * Affichage de la langue.
 * Model simple.
 */
/**
 *
 */
/**
 * Card rotation
 */
/**
* translation on hover
*/
/**
* Before cover
*/
/**
* Before cover
*/
/**
 *  pas de retour Ã  la ligne
 */
/**
 *  Mixin for multiline limit text css
 */
/*!
 * .list-element{@include list-element(($paddingY:10px, $paddingX:5px, $borderW:1px));}
 */
/**
 *  Images area to preload,
 *  on ajoute sur la div contenant l'image
 */
/**
 *
 */
/**
 * Affet Ombre
 */
/**
 * Pricelist
 */
/*--------------------------------------------------------------
# Sections General
--------------------------------------------------------------*/
.btn-blue {
  font-size: 1.68rem;
  background-color: #ea000d;
  border: none;
  color: #fff;
  font-size: 14px;
  line-height: 14px;
  font-weight: 500;
  text-transform: uppercase;
  padding: 15px 30px 15px 31px;
  border-radius: 30px;
  letter-spacing: 0.7px;
  transition: all ease 0.5s;
  display: inline-block;
  text-decoration: none;
}
.btn-blue:hover {
  background-color: #b28c62;
  color: #fff;
  text-decoration: none;
}

/*--------------------------------------------------------------
# Hero Section
--------------------------------------------------------------*/
.price-block {
  max-width: 600px;
  margin: 0 auto;
}
.price-block .item-price {
  background-color: #fff;
  box-shadow: 4px 0 19px rgba(80, 70, 69, 0.35);
  transition: all ease-in-out 0.4s;
}
.price-block .item-price:hover {
  transform: translateY(-3%);
}
.price-block .item-price__wrap {
  color: #c69c6d;
  text-align: center;
  padding-top: 30px;
}
.price-block .item-price__wrap p {
  font-weight: 300;
  font-size: 55px;
  position: relative;
  top: -5px;
  color: #504645;
}
.price-block .item-price__wrap .per-mn {
  display: block;
  position: relative;
  top: -15px;
}
.price-block .item-price__head {
  background-color: #f8f8f8;
}
.price-block .item-price__head .name-wrap {
  color: #fff;
  background-color: #2d2c2c;
  position: relative;
  text-align: center;
  padding-top: 15px;
}
.price-block .item-price__head .name-wrap h2 {
  font-size: 1.96rem;
  font-weight: 400;
  margin-top: 0;
  margin-bottom: 0;
  letter-spacing: 0.3px;
  padding-bottom: 4px;
  color: #fff;
}
.price-block .item-price__head .name-wrap::after {
  content: "";
  display: block;
  width: 100%;
  height: 30px;
  position: absolute;
  background-image: url(../icons/triangle.svg);
  background-size: contain;
  background-repeat: no-repeat;
  transform: translateY(-2%);
}
@media only screen and (max-width: 1200px) {
  .price-block .item-price__head .name-wrap::after {
    background-size: 102% 100%;
    height: 30px;
  }
}
@media only screen and (max-width: 991px) {
  .price-block .item-price__head .name-wrap::after {
    background-size: 100% 100%;
  }
}
.price-block .item-price__body ul {
  padding-left: 0;
  margin-top: 0;
}
.price-block .item-price__body li {
  text-align: center;
  color: #5c5757;
  font-size: 1.4rem;
  font-weight: 400;
  list-style: none;
  padding-top: 11px;
  padding-bottom: 11px;
}
.price-block .item-price__body li:nth-child(2n+1) {
  background-color: #f1f1f1;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/